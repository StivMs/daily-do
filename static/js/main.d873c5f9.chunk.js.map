{"version":3,"sources":["layout/Header.jsx","todos/TodoItem.jsx","todos/Todos.jsx","layout/AddTodo.jsx","App.js","index.js"],"names":["Header","totalTodos","onShowTodo","showAddLabel","classes","useStyles","className","label","dir","from","to","icon","Button","inputButton","onClick","makeStyles","fontSize","backgroundColor","props","marginLeft","defaultProps","root","flexGrow","margin","borderRadius","marginTop","marginBottom","boxShadow","border","transition","grid","chip","float","chipColor","body","whiteSpace","deleteButton","bottom","TodoItem","todo","onDelete","index","title","text","category","useState","setChipColor","useEffect","Grid","item","xs","md","Card","CardContent","Typography","variant","IconButton","aria-label","Chip","Todos","todos","map","padding","textAlign","inputField","display","width","button","background","color","height","formControl","minWidth","AddTodo","onAddTodo","setTitle","setText","setCategory","Fragment","TextField","name","value","onChange","e","target","multiline","rows","rowsMax","Infinity","FormControl","InputLabel","htmlFor","Select","native","inputProps","id","alert","App","savedTodos","JSON","parse","localStorage","getItem","setTodos","showAddTodo","setShowAddTodo","items","setItem","stringify","length","newTodo","newTodoList","filter","todoID","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d873c5f9.chunk.js","sourcesContent":["import React from 'react'\nimport Gradient from 'rgt'\nimport { makeStyles } from '@material-ui/core/styles';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport { Button } from '@material-ui/core';\n\nconst Header = ({ totalTodos, onShowTodo, showAddLabel }) => {\n    const classes = useStyles({ showAddLabel })\n\n\n    const wrapperFunc = () => {\n        // Show the input for new Todo-object\n        onShowTodo()\n    }\n\n    return (\n        <header className='header'>\n            <h1 className={classes.label}>\n                <Gradient\n                    dir=\"left-to-right\"\n                    from=\"#00DFD8\"\n                    to=\"#007CF0\">\n                    DailyDo\n                     <PlaylistAddCheckIcon className={classes.icon} />\n                </Gradient>\n            </h1>\n            {totalTodos <= 0 ? null :\n                <h2>You have total of {totalTodos} todos\n                     <Button className={classes.inputButton}\n                        onClick={wrapperFunc}>\n                        {showAddLabel ? \"Hide input\" : \"Show Input \"}\n                    </Button>\n                </h2>}\n\n\n\n            {}\n        </header>\n    )\n}\n\nconst useStyles = makeStyles({\n    label: {\n        fontSize: '10vh',\n    },\n\n    icon: {\n        fontSize: '10vh'\n    },\n    inputButton: {\n        backgroundColor: props =>\n            props.showAddLabel ? \"#E57373\" : \"#04CA83\",\n        marginLeft: 15,\n\n        \"&:hover\": {\n            backgroundColor: props =>\n                props.showAddLabel ? \"#E57373\" : \"#04CA83\"\n        }\n\n    }\n})\n\nHeader.defaultProps = {\n    totalTodos: 'none'\n}\nexport default Header\n\n\n","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, Typography, IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/DeleteRounded'\nimport Chip from '@material-ui/core/Chip';\nimport Study from '@material-ui/icons/MenuBook';\nimport Work from '@material-ui/icons/Work';\nimport General from '@material-ui/icons/AssignmentInd';\nimport Grid from '@material-ui/core/Grid';\n\n\n// Save the value of the input in setstate\n\nconst TodoItem = ({ todo, onDelete, index }) => {\n    const { title, text, category } = todo\n    const [chipColor, setChipColor] = useState('')\n    const classes = useStyles({ chipColor });\n\n    const iconToShow = () => {\n        if (category === 'General') {\n            return <General />\n        } else if (category === 'Work') {\n            return <Work />\n        } else if (category === 'Study') {\n            return <Study />\n        }\n    }\n\n\n    useEffect(() => {\n        if (category === 'General') {\n            setChipColor('#F6C197')\n        } else if (category === 'Work') {\n            setChipColor('#8186D4')\n        } else if (category === 'Study') {\n            setChipColor('#04CA83')\n        }\n    }, [category])\n\n\n    /* setChipColor('#F6C197')\n } else if (category === 'Work') {\n     setChipColor('#8186D4')\n } else if (category === 'Study') {\n     setChipColor('#04CA83')\n */\n\n    return (\n\n        <Grid className={classes.grid} item xs={8} md={5}>\n            <Card className={classes.root}>\n                <CardContent >\n                    <div>\n                        <Typography variant=\"h4\">\n                            {title}\n                        </Typography>\n                    </div>\n                    <Typography variant=\"body2\" className={classes.body}>\n                        {text}\n                    </Typography>\n                    <IconButton className={classes.deleteButton}\n                        aria-label=\"delete\"\n                        onClick={() => onDelete(index)}>\n                        <DeleteIcon className={classes.deleteButton} />\n                    </IconButton>\n                    <Chip className={classes.chip}\n                        label={category} icon={iconToShow()} />\n                </CardContent>\n\n            </Card>\n        </Grid >\n    )\n}\n\nconst useStyles = makeStyles({\n\n    root: {\n        flexGrow: 1,\n        margin: '0 auto',\n        borderRadius: 10,\n        marginTop: '15px',\n        marginBottom: '15px',\n\n        boxShadow: '0 8px 32px 0 rgba(31, 38, 135, 0.37)',\n\n\n        border:\n            '1px solid rgba(255, 255, 255, 0.18)',\n        transition: \"0.3s\",\n        //boxShadow: \"2px 8px 40px -12px rgba(0,0,0,0.3)\",\n        \"&:hover\": {\n            boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\"\n\n        },\n\n    },\n    grid: {\n\n        margin: '0 auto',\n\n    },\n\n\n    chip: {\n        float: 'right',\n        margin: 10,\n        backgroundColor: props => props.chipColor\n    },\n\n    body: {\n        fontSize: 16,\n        whiteSpace: 'pre-wrap'\n    },\n\n    deleteButton: {\n        float: 'right',\n        bottom: 5,\n\n        '&:only-child': {\n            fontSize: '1.5em'\n        }\n    }\n});\n\nexport default TodoItem","import React from 'react'\nimport TodosItem from './TodoItem'\n\nconst Todos = ({ todos, onDelete }) => {\n    return (\n        todos.map((todo, index) => (\n            <TodosItem key={index}\n                index={index}\n                todo={todo}\n                onDelete={onDelete} />\n        ))\n    )\n}\n\nexport default Todos","import React, { useState } from 'react'\nimport { TextField, Button } from '@material-ui/core';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst AddTodo = ({ onAddTodo }) => {\n    const [title, setTitle] = useState('')\n    const [text, setText] = useState('')\n    const [category, setCategory] = useState('General')\n    const classes = useStyles();\n\n\n    const addTask = () => {\n\n        if (!title || !text) alert('Please add text into the fields')\n        else {\n            onAddTodo({ title, text, category })\n            setTitle('')\n            setText('')\n        }\n\n    }\n\n    return (\n        <React.Fragment>\n            <div className={classes.root}>\n                <TextField\n                    className={classes.inputField}\n                    label=\"Add a new task\"\n                    name=\"title\"\n                    variant=\"outlined\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                />\n                <TextField\n                    className={classes.inputField}\n                    label=\"Add a description\"\n                    name=\"text\"\n                    variant=\"outlined\"\n                    value={text}\n                    multiline\n                    rows={4}\n                    rowsMax={Infinity}\n                    onChange={(e) => setText(e.target.value)}\n                />\n\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor=\"category-native-simple\">Category</InputLabel>\n                    <Select\n                        native\n                        value={category}\n                        onChange={(e) => setCategory(e.target.value)}\n                        inputProps={{\n                            name: 'Category',\n                            id: 'category-native-simple',\n                        }}\n                    >\n                        <option value={\"General\"}>General</option>\n                        <option value={\"Study\"}>Study</option>\n                        <option value={\"Work\"}>Work</option>\n                    </Select>\n                </FormControl>\n\n                <Button\n                    className={classes.button}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={addTask}>\n                    Add a new todo</Button>\n            </div>\n\n        </React.Fragment>\n    )\n}\n\nconst useStyles = makeStyles({\n    root: {\n        padding: 5,\n        textAlign: 'center'\n    },\n    inputField: {\n        display: \"flex\",\n        width: \"40vw\",\n        margin: '0 auto',\n        marginTop: 20\n    },\n    button: {\n        marginTop: 20,\n        margin: '0 auto',\n        display: \"block\",\n        background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n        border: 0,\n        borderRadius: 3,\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\n        color: 'white',\n        height: 50,\n        padding: '0 30px',\n    },\n    formControl: {\n        minWidth: 120,\n        marginTop: 15\n    }\n\n\n});\n\nexport default AddTodo","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport './App.css';\nimport Header from './layout/Header'\nimport Todos from './todos/Todos'\nimport AddTodo from './layout/AddTodo';\n\nfunction App() {\n  const savedTodos = JSON.parse(localStorage.getItem('todos'));\n  const [todos, setTodos] = useState(savedTodos || [])\n\n  const [showAddTodo, setShowAddTodo] = useState(true)\n\n\n  useEffect(() => {\n    const items = JSON.parse(localStorage.getItem('todos'));\n    if (items) {\n      setTodos(items);\n    }\n  }, []);\n\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  const addTodo = (newTodo) => {\n    setTodos([...todos, newTodo])\n  }\n\n  const removeTodo = (index) => {\n    const newTodoList = todos.filter((todo, todoID) => todoID !== index)\n    setTodos(newTodoList);\n  }\n\n  return (\n    <div className=\"App\">\n      <Header totalTodos={todos.length}\n        onShowTodo={() => setShowAddTodo(!showAddTodo)}\n        showAddLabel={showAddTodo} />\n      {showAddTodo && <AddTodo onAddTodo={addTodo} />}\n\n      {todos.length > 0 ?\n        (<Todos todos={todos}\n          onDelete={removeTodo} />) :\n        (<h2 className=\"emptyTodo\">Nothing to do today? 🤔</h2>)}\n\n    </div>\n  );\n}\n\n\nexport default App;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}